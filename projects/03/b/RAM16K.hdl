// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(in=load,sel=address[12..13],a=load01,b=load02,c=load03,d=load04);
    RAM4K(in=in,load=load01,address=address[0..11],out=out01);
    RAM4K(in=in,load=load02,address=address[0..11],out=out02);
    RAM4K(in=in,load=load03,address=address[0..11],out=out03);
    RAM4K(in=in,load=load04,address=address[0..11],out=out04);
    Mux4Way16(a=out01,b=out02,c=out03,d=out04,sel=address[12..13],out=out);
}
